import React, { useEffect, useLayoutEffect } from "react";
import { random } from "../../functions/functions";

export default function AnimatedBlob({ title, colorPalette, img, underText }) {
  const blobArray = [
    "M769.388 4.91177C850.541 21.0633 909.511 81.6562 950.569 145.186C991.627 208.813 1014.91 275.377 989.285 331.369C963.658 387.459 888.981 432.977 838.416 484.858C787.713 536.641 761.122 594.885 705.596 599.681C650.071 604.38 565.887 555.827 493.966 540.557C422.045 525.286 362.662 543.395 321.604 532.628C280.683 521.958 258.225 482.313 213.584 445.801C168.944 409.191 101.982 375.517 55.6884 322.951C9.39439 270.287 -16.5082 198.731 11.7367 141.76C39.8438 84.7886 121.823 42.5988 209.175 28.8944C296.528 15.2879 388.978 30.3627 486.94 23.7063C584.901 17.0499 688.236 -11.2398 769.388 4.91177Z;",
    "M664.257 97.069C742.684 103.982 859.106 88.7944 928.643 114.352C998.038 139.909 1020.4 206.001 980.689 255.44C940.974 304.878 839.176 337.453 794.3 394.224C749.566 450.889 761.753 531.646 723.041 553.851C684.33 576.161 594.719 539.921 499.231 547.357C403.742 554.689 302.518 605.804 224.235 600.147C145.951 594.596 90.8944 532.379 65.0866 468.277C39.2789 404.174 42.7199 338.186 27.9521 265.914C13.041 193.642 -20.3658 115.085 18.2025 67.0079C56.6274 18.9311 166.884 1.33438 259.935 0.601179C353.13 -0.0272766 429.12 16.1031 487.33 38.7275C545.398 61.2471 585.83 90.156 664.257 97.069Z;",
    "M819.66 1.47955C908.836 -5.0946 990.594 38.3346 997.568 94.713C1004.39 151.091 936.583 220.319 936.138 289.348C935.693 358.476 1002.76 427.305 999.942 488.564C997.271 549.823 924.861 603.413 835.981 600.723C747.102 597.934 641.752 538.867 544.266 529.802C446.632 520.738 356.862 561.677 260.414 567.354C164.116 573.032 61.1396 543.349 20.6318 491.154C-19.7277 438.959 2.38099 364.253 59.359 311.66C116.337 258.967 208.184 228.487 269.911 200.995C331.488 173.503 363.093 149.199 402.563 136.449C441.883 123.699 489.217 122.603 561.181 93.6173C633.294 64.7309 730.335 8.0537 819.66 1.47955Z;",
    "M772.583 2.9702C839.378 14.4432 889.005 62.4979 932.06 113.468C975.249 164.532 1012 218.606 996.307 266.284C980.614 314.057 912.477 355.435 849.706 382.612C786.935 409.696 729.395 422.674 678.292 471.199C627.19 519.818 582.392 604.078 541.215 599.846C500.038 595.615 462.214 502.891 375.166 468.848C287.984 434.805 151.577 459.538 79.4172 436.686C7.25712 413.74 -0.388074 343.209 0.0143061 272.867C0.282559 202.431 8.86666 132.276 69.0895 94.942C129.312 57.6078 241.308 53.1879 328.088 49.7084C414.734 46.2289 476.298 43.7838 548.994 30.0539C621.825 16.418 705.788 -8.5968 772.583 2.9702Z;",
    "M666.849 17.2082C721.668 40.6476 730 95.241 815.5 119.5C893.916 141.749 959.686 193.004 990 233.748C1020.5 274.492 982.558 324.026 930.825 369.807C879.092 415.495 996.5 511.523 730 553.199C542 582.599 538.563 591.016 424.932 598.799C311.301 606.581 188.776 576.275 140.31 521.705C91.8448 467.227 117.439 388.393 105.096 334.831C92.9339 281.359 42.8348 253.067 18.1482 217.725C-6.35685 182.291 -5.63077 139.716 25.9535 103C57.3563 66.1929 119.436 35.3371 192.588 17.2082C265.558 -0.829212 349.783 -6.1397 417.308 8.32681C484.833 22.7933 612.212 -6.13971 666.849 17.2082Z;",
    "M714.485 143.74C783.322 191.1 874.693 191.5 931.028 217.478C987.364 243.456 1008.66 294.912 996.933 341.973C985.048 389.033 940.135 431.597 901.24 477.059C862.191 522.52 829.162 570.68 772.21 568.182C715.103 565.584 634.073 512.129 544.091 522.22C453.954 532.312 355.021 605.95 319.522 600.454C284.177 594.959 312.268 510.33 272.91 454.877C233.398 399.324 126.13 372.846 61.3059 322.189C-3.51812 271.432 -25.8979 196.495 38.7718 169.218C103.442 141.941 255.315 162.424 355.484 126.754C455.807 91.0843 504.425 -0.538409 551.808 0.760495C599.345 2.0594 645.648 96.2799 714.485 143.74Z;",
    "M639.227 150.874C684.167 192.121 738.096 199.256 752.862 220.771C767.628 242.287 742.911 278.407 802.296 338.16C861.521 398.024 1004.85 481.634 999.874 514.967C994.898 548.299 841.78 531.243 737.614 510.396C633.288 489.438 577.915 464.689 501.838 489.549C425.76 514.521 328.817 589.212 252.579 598.911C176.501 608.498 120.807 553.204 72.9779 494.9C25.1485 436.708 -15.1374 375.505 5.56732 322.664C26.1115 269.823 107.486 225.231 165.427 179.078C223.368 132.925 257.876 85.1005 313.409 48.0892C368.943 11.1893 445.823 -15.0084 501.998 9.6286C558.334 34.2657 594.287 109.626 639.227 150.874Z;",
    "M639.227 150.874C684.167 192.121 738.096 199.256 752.862 220.771C767.628 242.287 742.911 278.407 802.296 338.16C861.521 398.024 1004.85 481.634 999.874 514.967C994.898 548.299 841.78 531.243 737.614 510.396C633.288 489.438 577.915 464.689 501.838 489.549C425.76 514.521 328.817 589.212 252.579 598.911C176.501 608.498 120.807 553.204 72.9779 494.9C25.1485 436.708 -15.1374 375.505 5.56732 322.664C26.1115 269.823 107.486 225.231 165.427 179.078C223.368 132.925 257.876 85.1005 313.409 48.0892C368.943 11.1893 445.823 -15.0084 501.998 9.6286C558.334 34.2657 594.287 109.626 639.227 150.874Z;",
    "M736.283 0.0533291C821.784 1.29715 914.531 28.0872 963.144 77.4575C1011.76 126.732 1016.37 198.491 952.21 243.365C887.919 288.238 755.122 306.13 706.641 355.692C658.291 405.253 694.257 486.485 672.914 535.759C651.572 584.938 572.658 602.256 495.852 599.769C419.045 597.281 344.084 574.988 270.176 547.815C196.136 520.642 123.151 488.494 73.3516 441.42C23.6845 394.346 -2.79588 332.25 0.234207 271.494C3.39604 210.738 35.8049 151.322 86.9212 105.97C138.169 60.7137 207.993 29.6181 278.871 22.1552C349.88 14.7879 421.812 31.0533 497.037 27.0348C572.263 23.0163 650.65 -1.28618 736.283 0.0533291Z;",
    "M901.183 16.5493C954.695 46.7777 953.171 120.521 964.605 175.539C976.192 230.467 1000.89 266.581 999.975 302.427C999.213 338.184 972.685 373.762 942.346 409.609C912.007 445.544 877.704 481.836 825.106 497.351C772.509 512.867 701.616 507.695 609.074 529.72C516.38 551.656 402.037 600.966 306.294 599.986C210.55 599.005 133.559 547.821 77.6073 489.95C21.6554 431.99 -12.9525 367.342 4.58009 308.669C22.2652 249.906 92.0907 197.207 190.883 182.672C289.676 168.227 417.283 192.035 495.493 170.099C573.552 148.163 602.061 80.573 670.667 40.09C739.273 -0.392971 847.67 -13.7684 901.183 16.5493Z;",
    "M625.474 117.136C703.541 147.099 806.139 149.165 887.525 186.131C968.911 223.097 1029.23 294.848 986.228 346.853C943.226 398.858 797.048 431.232 711.477 462.343C625.907 493.455 600.798 523.533 565.588 543.852C530.523 564.287 485.213 575.078 432.11 585.984C379.007 597.005 317.823 608.026 268.327 594.25C218.688 580.474 180.736 541.901 169.625 499.769C158.514 457.637 174.531 412.175 134.848 348.46C95.3097 284.746 0.214982 202.777 0.503585 145.836C0.792188 88.7797 96.3198 56.7501 185.498 31.8382C274.532 6.92629 357.361 -10.6383 425.472 9.33711C493.726 29.4274 547.262 87.1725 625.474 117.136Z;",
    "M659.017 12.603C706.69 25.1959 753.145 49.8779 771.423 84.8861C789.852 120.02 780.257 165.48 831.434 235.497C882.762 305.513 994.711 399.96 1000.5 469.598C1006.13 539.237 905.609 583.942 806.607 596.786C707.757 609.631 610.43 590.364 538.691 554.096C466.8 517.703 420.345 464.183 353.328 436.101C286.311 408.145 198.58 405.627 126.384 372.381C54.1883 339.136 -2.62386 275.038 0.879305 212.704C4.38247 150.369 68.2009 89.7973 141.31 57.8114C214.42 25.8256 296.82 22.4255 360.334 17.3883C423.848 12.2252 468.628 5.42509 515.387 2.27688C562.299 -0.745412 611.191 -0.115772 659.017 12.603Z;",
    "M865.174 3.63733C927.877 18.8967 949.312 91.183 967.977 151.633C986.788 212.084 1002.68 260.601 999.766 308.042C996.85 355.483 974.977 401.848 929.627 431.29C884.276 460.831 815.595 473.547 755.808 509.739C696.022 545.931 645.131 605.599 599.343 599.926C553.409 594.252 512.288 523.238 464.167 482.546C415.9 441.855 360.634 431.584 271.684 407.717C182.879 383.849 60.5355 346.581 17.9559 292.782C-24.4779 238.983 12.8522 168.654 86.9291 127.766C161.006 86.7812 271.975 75.1411 362.676 70.7393C453.376 66.2398 523.954 68.8808 611.154 49.4154C698.355 29.8521 802.471 -11.7198 865.174 3.63733Z;",
    "M772.942 54.1073C845.596 86.5634 914.877 117.69 954.518 160.47C994.159 203.249 1004.28 257.682 998.496 310.003C992.713 362.402 971.266 412.533 946.204 471.814C921.263 531.096 892.707 599.449 825.836 599.997C758.845 600.544 653.417 533.364 580.401 496.919C507.385 460.474 466.901 454.765 382.559 460.709C298.217 466.653 170.017 484.249 97.3626 461.413C24.708 438.654 7.35764 375.384 1.69468 310.081C-4.08877 244.699 1.69465 177.128 71.2165 150.85C140.859 124.572 274.24 139.432 364.365 113.545C454.37 87.5801 501.24 20.7908 562.689 4.28898C624.138 -12.1346 700.167 21.6511 772.942 54.1073Z;",
    "M591.654 94.3927C641.364 110.963 701.539 118.543 774.201 143.574C846.863 168.694 931.893 211.089 972.445 270.935C1013 330.694 1008.84 407.815 965.191 470.13C921.665 532.532 838.538 580.039 748.395 594.846C658.251 609.566 561.21 591.585 480.223 570.784C399.237 550.072 334.424 526.627 259.74 505.209C185.057 483.879 100.622 464.577 51.2686 422.975C2.0345 381.373 -11.8795 317.473 11.7862 263.708C35.4519 209.943 96.8161 166.314 141.888 119.336C186.96 72.4461 215.858 22.2068 266.757 6.25361C317.775 -9.69956 390.912 8.63337 447.044 30.58C503.057 52.4385 542.063 77.9107 591.654 94.3927Z;",
    "M732.069 0.600826C834.282 4.42834 939.644 41.7192 979.332 101.319C1018.86 161.028 992.877 243.046 982.325 320.909C971.93 398.662 977.128 472.369 922.95 514.581C868.93 556.902 755.693 567.947 663.718 579.539C571.9 591.24 501.658 603.598 434.724 599.442C367.79 595.396 304.163 574.837 265.892 541.701C227.464 508.566 214.235 462.964 164.625 424.798C115.014 386.632 29.0236 355.794 6.65968 316.097C-15.5467 276.4 25.7163 227.736 75.9563 190.336C126.196 152.936 185.414 126.799 246.206 106.24C306.84 85.7902 369.05 70.9176 449.686 48.6087C530.479 26.4092 629.699 -3.22668 732.069 0.600826Z;",
    "M773.155 36.8759C836.812 42.3188 879.153 92.3941 924.975 142.568C970.796 192.743 1019.95 242.818 991.677 281.809C963.401 320.801 857.547 348.708 796.791 381.069C736.034 413.529 720.228 450.541 684.847 494.679C649.611 538.816 594.654 590.079 532.592 598.689C470.53 607.199 401.073 573.057 358.442 531.889C315.665 490.621 299.715 442.228 225.618 401.257C151.52 360.287 19.4211 326.639 2.02051 286.164C-15.235 245.688 82.063 198.284 140.5 138.709C198.792 79.232 218.222 7.38491 278.254 0.556461C338.286 -6.27198 439.064 51.8193 531.867 61.2208C624.67 70.6222 709.498 31.4329 773.155 36.8759Z;",
    "M759.8 55.3949C851.586 49.7143 975.716 47.2148 996.57 88.3424C1017.57 129.584 935.285 214.338 935.711 299.434C936.136 384.415 1019.13 469.624 988.484 497.346C957.842 524.953 813.566 495.073 721.355 506.889C629.286 518.591 589.28 571.989 535.514 591.189C481.747 610.39 414.22 595.506 346.551 572.443C279.024 549.266 211.497 518.023 149.361 471.101C87.0829 424.18 30.3375 361.693 9.19984 289.436C-11.9378 217.178 2.81595 135.264 58.9939 79.9351C115.03 24.7196 212.774 -3.797 301.439 0.406649C390.104 4.72391 469.689 41.7614 539.202 55.8493C608.715 69.9372 668.156 61.0755 759.8 55.3949Z;",
    "M803.62 6.65246C852.017 25.9186 867.999 91.4234 907.5 145.836C947.152 200.365 1010.32 243.684 998.564 281.866C986.804 319.931 899.962 352.859 846.137 388.238C792.313 423.618 771.657 461.566 735.021 497.063C698.233 532.559 645.464 565.72 579.126 583.935C512.788 602.151 432.881 605.42 349.053 590.941C265.377 576.463 177.629 544.119 116.417 490.524C55.0547 436.929 20.0764 362.083 5.90413 280.815C-8.26811 199.547 -1.48353 111.974 77.5192 82.199C156.522 52.3073 307.893 80.214 405.742 82.8996C503.742 85.7019 548.219 63.1664 611.089 38.6459C673.809 14.0086 755.073 -12.7304 803.62 6.65246Z;",
    "M793.58 0.0110883C862.696 -0.875262 912.614 51.5179 938.258 106.472C963.903 161.327 965.137 218.546 978.577 281.477C992.016 344.309 1017.66 412.755 981.456 454.413C945.252 496.072 847.063 510.943 764.644 518.822C682.088 526.799 615.028 527.882 531.1 549.056C447.036 570.23 346.103 611.593 279.592 596.919C213.081 582.343 180.991 511.829 136.011 448.997C91.0298 386.164 32.8839 331.014 10.3936 266.507C-12.2339 202.001 0.794044 128.138 62.2311 85.7901C123.668 43.4423 233.789 32.5106 322.79 41.7681C411.929 51.0255 479.949 80.3735 558.116 67.8662C636.284 55.3588 724.6 0.995922 793.58 0.0110883Z;",
    "M669.716 141.88C715.453 185.223 756.895 213.904 814.762 250.719C872.629 287.427 947.048 332.268 980.656 393.377C1014.14 454.592 1006.94 532.182 941.994 558.616C876.925 585.05 754.368 560.221 675.022 564.288C595.676 568.248 559.667 601.103 523.911 600.675C488.155 600.354 452.525 566.856 376.716 561.184C300.908 555.512 184.669 577.558 107.723 551.445C30.6514 525.44 -7.12637 451.168 1.46524 381.176C10.0569 311.185 65.0179 245.368 117.452 183.403C170.012 121.439 220.172 63.4338 287.515 30.6857C354.732 -2.06247 439.258 -9.44685 506.475 15.7029C573.818 40.9596 623.852 98.6434 669.716 141.88Z;",
  ];

  let pathString = "";
  let firstPath = "";
  let initialPath;

  let aboveText = null;
  let wrapper = null;
  let realLeftPosition = 0;
  let realTopPosition = 0;

  function positionText() {
    if (underText !== null) {
      aboveText = document.getElementById(`above-text-${title}`);
      wrapper = document.getElementById(`wrapper-${title}`);

      const leftCorner = (window.innerWidth - wrapper.offsetWidth) / 2;

      realLeftPosition = underText.offsetLeft - leftCorner;
      realTopPosition = -aboveText.getBBox().y - 1 - 100;

      aboveText.style.transform = `translate(${realLeftPosition}px, ${realTopPosition}px)`;
    }
  }

  useLayoutEffect(() => {
    positionText();
    window.addEventListener("resize", positionText);
  });

  initialPath = blobArray[Math.ceil(random(0, blobArray.length - 1))];
  // Create the animation shape; we will have 5 blob of shape different and then add the first one as the last one to create a loop.
  for (let i = 0; i < 5; i++) {
    let number = Math.ceil(random(0, blobArray.length - 1));
    if (i === 0) {
      firstPath = blobArray[number];
    }
    pathString += blobArray[number];
  }
  pathString += firstPath;

  pathString = pathString.slice(0, pathString.length - 1);

  let animate = (
    <animate
      attributeName="d"
      dur="30s"
      repeatCount="indefinite"
      calcMode="spline"
      // pathString length + 1 (if 2 path then 3 value 0 and 1 are mandatory)
      keyTimes="0;0.2;0.4;0.6;0.8;1"
      // same number of value as the values minus 1
      keySplines="0.45 0.15 0.58 0.85; 0.45 0.15 0.58 0.85; 0.45 0.15 0.58 0.85; 0.45 0.15 0.58 0.85;0.45 0.15 0.58 0.85"
      values={pathString}
    />
  );

  return (
    <div
      id={`wrapper-${title}`}
      style={{
        position: "relative",
        width: "70vw",
        height: "100%",
        top: "50%",
        left: "50%",
        transform: "translate(-50%, -50%)",
      }}
    >
      <svg
        width="1000px"
        height="600px"
        viewBox="0 0 1000 600"
        fill="#546554"
        style={{
          paddingTop: "100px",
        }}
      >
        <defs>
          <pattern
            id={`imageId-${title}`}
            patternUnits="userSpaceOnUse"
            width="1000px"
            height="600px"
          >
            <image href={img} width="1000px" height="600px" x="0" y="0" />
          </pattern>
          <clipPath id={`shape-${title}`}>
            <path d={initialPath} fill="none">
              {animate}
            </path>
          </clipPath>
        </defs>
        <g clipPath={`url(#shape-${title})`}>
          <path fill={`url(#imageId-${title})`} d={initialPath}>
            {animate}
          </path>
          <svg width="1000px" height="600px" fill="brown">
            <text
              id={`above-text-${title}`}
              fontWeight="300"
              fontFamily="Butler"
              fontSize="9rem"
              fill={`#${colorPalette.randomHexaColor()}`}
            >
              {title}
            </text>
          </svg>
        </g>
      </svg>
    </div>
  );
}
